{"version":3,"sources":["Components/assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","airing_today","TVPresenter_Container","tv","original_name","first_air_date","TVContainer","TV_TVPresenter","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","App_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6qBCIxC,IAAMC,EAAYC,UAAOC,IAAVC,KAMTC,EAAQH,UAAOI,KAAVC,KAKLC,EAAON,UAAOC,IAAVM,KAsBKC,EAfC,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAOC,EAATF,EAASE,SAAT,OACZC,EAAAC,EAAAC,cAACf,EAAD,KACIa,EAAAC,EAAAC,cAACX,EAAD,KAAQO,GACRE,EAAAC,EAAAC,cAACR,EAAD,KAAOK,kNCtBf,IAAMZ,EAAYC,UAAOC,IAAVc,KASAC,EAAA,kBACXJ,EAAAC,EAAAC,cAACG,EAAD,KACIL,EAAAC,EAAAC,cAAA,QAAMI,KAAO,MAAMC,aAAa,WAAhC,gPCVR,IAAMpB,EAAYC,UAAOC,IAAVmB,KAMTC,EAAOrB,UAAOI,KAAVkB,IACG,SAAAC,GAAK,OAAIA,EAAMC,QAcbC,EAXC,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,KAAMF,EAATf,EAASe,MAAT,OACZZ,EAAAC,EAAAC,cAACa,EAAD,KACIf,EAAAC,EAAAC,cAACO,EAAD,CAAMG,MAAOA,GAASE,w8BCyE9B,IAAM3B,EAAYC,UAAOC,IAAV2B,KAITC,EAAQ7B,UAAOC,IAAV6B,IACe,SAAAP,GAAK,OAAIA,EAAMQ,QAQnCC,EAAShC,UAAOI,KAAV6B,KAQNC,EAAiBlC,UAAOC,IAAVkC,IAIdN,EAGAG,GAMA7B,EAAQH,UAAOI,KAAVgC,KAKLC,EAAOrC,UAAOI,KAAVkC,KAwCKC,EAnCA,SAAA9B,GAAA,IAAG+B,EAAH/B,EAAG+B,GAAIC,EAAPhC,EAAOgC,SAAU/B,EAAjBD,EAAiBC,MAAOgC,EAAxBjC,EAAwBiC,OAAQC,EAAhClC,EAAgCkC,KAAhCC,EAAAnC,EAAsCoC,eAAtC,IAAAD,KAAA,OACbhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAIF,EAAO,UAAAG,OAAaR,GAAb,SAAAQ,OAA6BR,IAC5C5B,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAACe,EAAD,CACEE,MACEU,EAAQ,kCAAAO,OAC8BP,GAClCS,EAAQ,MAGhBtC,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,QAAMI,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IACPuB,EAJH,QAOF9B,EAAAC,EAAAC,cAACqC,EAAD,KACGzC,EAAM0C,OAAS,GAAf,GAAAJ,OAAuBtC,EAAM2C,UAAU,EAAG,IAA1C,UAAmD3C,GAEtDE,EAAAC,EAAAC,cAACuB,EAAD,KAAOM,gHCrEb,IAAM5C,EAAYC,UAAOC,IAAVqD,KA4IAC,EAvEO,SAAA9C,GAAA,IAAG+C,EAAH/C,EAAG+C,WAAYC,EAAfhD,EAAegD,QAASC,EAAxBjD,EAAwBiD,SAAUC,EAAlClD,EAAkCkD,QAASC,EAA3CnD,EAA2CmD,MAA3C,OACpBhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACEjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,kCAED6C,EACC/C,EAAAC,EAAAC,cAACE,EAAD,MAEAJ,EAAAC,EAAAC,cAACiD,EAAD,KACEnD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,kCAED0C,GAAcA,EAAWJ,OAAS,GACjCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,eACZ8C,EAAWS,IAAI,SAAAC,GAAK,OACnBtD,EAAAC,EAAAC,cAACqD,EAAD,CACEC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAKhBa,GAAYA,EAASN,OAAS,GAC7BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,mBACZgD,EAASO,IAAI,SAAAC,GAAK,OACjBtD,EAAAC,EAAAC,cAACqD,EAAD,CACEC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAKhBY,GAAWA,EAAQL,OAAS,GAC3BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAM,kBACZ+C,EAAQQ,IAAI,SAAAC,GAAK,OAChBtD,EAAAC,EAAAC,cAACqD,EAAD,CACEC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAS,OAKhBe,GAAShD,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMkC,eC5H3Cc,SAAMC,EAAMC,OAAO,CACrBC,QAAS,gCACTC,OAAQ,CACJC,QAAS,mCACTC,SAAU,WAILC,GAAY,CACrBzB,WAAY,kBAAMkB,EAAIQ,IAAI,sBAC1BxB,SAAU,kBAAMgB,EAAIQ,IAAI,mBACxBzB,QAAS,kBAAMiB,EAAIQ,IAAI,kBACvBC,YAAa,SAAA3C,GAAE,OACXkC,EAAIQ,IAAJ,SAAAlC,OAAiBR,EAAjB,6CAAgE,CAC5DsC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,EAAIQ,IAAI,eAAgB,CACpBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QAK7BG,GAAQ,CACjBC,SAAU,kBAAMhB,EAAIQ,IAAI,iBACxBzB,QAAS,kBAAMiB,EAAIQ,IAAI,eACvBS,YAAa,kBAAMjB,EAAIQ,IAAI,oBAC3BU,WAAY,SAAApD,GAAE,OACVkC,EAAIQ,IAAJ,MAAAlC,OAAcR,EAAd,6CAA6D,CACzDsC,OAAQ,CACJM,mBAAoB,aAGhCC,OAAQ,SAAAC,GAAI,OACRZ,EAAIQ,IAAI,YAAa,CACjBJ,OAAQ,CACJS,MAAOC,mBAAmBF,QC7H3BO,8MCgEbC,MAAQ,CACNtC,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAS,uOAOGsB,GAAUzB,oCADDA,IAAjBuC,KAAQC,iBAIAf,GAAUvB,kCADDA,IAAjBqC,KAAQC,kBAIAf,GAAUxB,2BADDA,IAAjBsC,KAAQC,QAEVC,KAAKC,SAAS,CACZ1C,aACAE,WACAD,8DAGFwC,KAAKC,SAAS,CACZtC,MAAO,2DAGTqC,KAAKC,SAAS,CACZvC,SAAS,oKAKN,IAAAwC,EACmDF,KAAKH,MAAvDtC,EADD2C,EACC3C,WAAYE,EADbyC,EACazC,SAAUD,EADvB0C,EACuB1C,QAASG,EADhCuC,EACgCvC,MAAOD,EADvCwC,EACuCxC,QAC9C,OACE/C,EAAAC,EAAAC,cAACsF,EAAD,CACE5C,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,WA5CY0C,IAAMC,4GCtDnC,IAAMvG,GAAYC,UAAOC,IAAVsG,MA4EAC,GAvEK,SAAA/F,GAAA,IAAEiF,EAAFjF,EAAEiF,SAAUjC,EAAZhD,EAAYgD,QAASgD,EAArBhG,EAAqBgG,aAAc9C,EAAnClD,EAAmCkD,QAASC,EAA5CnD,EAA4CmD,MAA5C,OAChBhD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,8BAED6C,EAAU/C,EAAAC,EAAAC,cAACE,EAAD,MACXJ,EAAAC,EAAAC,cAAC4F,GAAD,KACI9F,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACID,EAAAC,EAAAC,cAAA,8BAEF4E,GAAYA,EAAStC,OAAS,GAChCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAQ,YACZgF,EAASzB,IAAI,SAAA0C,GAAE,OACX/F,EAAAC,EAAAC,cAACqD,EAAD,CACAC,IAAKuC,EAAGnE,GACRA,GAAImE,EAAGnE,GACPC,SAAUkE,EAAGtC,YACb3D,MAAOiG,EAAGC,cACVlE,OAAQiE,EAAGpC,aACX5B,KAAMgE,EAAGE,eAAexD,UAAU,EAAE,QAM5CI,GAAWA,EAAQL,OAAS,GAC7BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAQ,WACZ+C,EAAQQ,IAAI,SAAA0C,GAAE,OACV/F,EAAAC,EAAAC,cAACqD,EAAD,CACAC,IAAKuC,EAAGnE,GACRA,GAAImE,EAAGnE,GACPC,SAAUkE,EAAGtC,YACb3D,MAAOiG,EAAGC,cACVlE,OAAQiE,EAAGpC,aACX5B,KAAMgE,EAAGE,eAAexD,UAAU,EAAE,QAM3CoD,GAAgBA,EAAarD,OAAS,GACxCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAQ,gBACZ+F,EAAaxC,IAAI,SAAA0C,GAAE,OACf/F,EAAAC,EAAAC,cAACqD,EAAD,CACAC,IAAKuC,EAAGnE,GACRA,GAAImE,EAAGnE,GACPC,SAAUkE,EAAGtC,YACb3D,MAAOiG,EAAGC,cACVlE,OAAQiE,EAAGpC,aACX5B,KAAMgE,EAAGE,eAAexD,UAAU,EAAE,QAM5CO,GAAShD,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMkC,OCrEtCkD,8MCKXhB,MAAQ,CACJJ,SAAU,KACVjC,QAAS,KACTkC,YAAa,KACb/B,MAAO,KACPD,SAAS,uOAMK8B,GAAMC,kCADKA,IAAjBK,KAAQC,iBAKFP,GAAMhC,iCADKA,IAAjBsC,KAAQC,kBAKFP,GAAME,+BADKA,IAAjBI,KAAQC,QAEZC,KAAKC,SAAS,CACVR,WACAjC,UACAkC,kEAGJM,KAAKC,SAAS,CACVtC,MAAO,wDAGXqC,KAAKC,SAAS,CACVvC,SAAS,oKAKZ,IAAAwC,EACqDF,KAAKH,MAAvDJ,EADHS,EACGT,SAAUjC,EADb0C,EACa1C,QAASkC,EADtBQ,EACsBR,YAAa/B,EADnCuC,EACmCvC,MAAOD,EAD1CwC,EAC0CxC,QAC/C,OACG/C,EAAAC,EAAAC,cAACiG,GAAD,CACCrB,SAAUA,EACVjC,QAASA,EACTkC,YAAaA,EACb/B,MAAOA,EACPD,QAASA,WA7CQ0C,IAAMC,yzBCDpBtG,UAAOgH,OAAVC,MAAZ,IAcMC,GAAOlH,UAAOmH,GAAVC,MAIJC,GAAOrH,UAAOsH,GAAVC,KAIqB,SAAAhG,GAAK,OAAKA,EAAMiG,QAAU,UAAY,gBAG/DC,GAAQzH,kBAAO0H,IAAP1H,CAAH2H,MAQIC,eAAW,SAAAnH,GAAA,IAAcoH,EAAdpH,EAAGqH,SAAWD,SAAd,OACtBjH,EAAAC,EAAAC,cAAA,cACGF,EAAAC,EAAAC,cAACoG,GAAD,KACItG,EAAAC,EAAAC,cAACuG,GAAD,CAAMG,QAAoB,MAAXK,GACXjH,EAAAC,EAAAC,cAAC2G,GAAD,CAAO1E,GAAG,KAAV,WAEJnC,EAAAC,EAAAC,cAACuG,GAAD,CAAMG,QAAoB,QAAXK,GACXjH,EAAAC,EAAAC,cAAC2G,GAAD,CAAO1E,GAAG,OAAV,OAEJnC,EAAAC,EAAAC,cAACuG,GAAD,CAAMG,QAAoB,YAAXK,GACXjH,EAAAC,EAAAC,cAAC2G,GAAD,CAAO1E,GAAG,WAAV,uWCxCf,IAAMhD,GAAYC,UAAOC,IAAV8H,MAGTC,GAAOhI,UAAOiI,KAAVC,MAIJC,GAAQnI,UAAOoI,MAAVC,MAmFIC,GA7ES,SAAA7H,GAAA,IACpB8H,EADoB9H,EACpB8H,aACAC,EAFoB/H,EAEpB+H,UACA5E,EAHoBnD,EAGpBmD,MACA6E,EAJoBhI,EAIpBgI,WACAC,EALoBjI,EAKpBiI,aACA/E,EANoBlD,EAMpBkD,QACAgF,EAPoBlI,EAOpBkI,WAPoB,OAUpB/H,EAAAC,EAAAC,cAAC8H,GAAD,KACIhI,EAAAC,EAAAC,cAACkH,GAAD,CAAMa,SAAUH,GACZ9H,EAAAC,EAAAC,cAACqH,GAAD,CACCW,YAAY,8BACZC,MAAQN,EACRO,SAAUL,KAIbhF,EACE/C,EAAAC,EAAAC,cAACE,EAAD,MAEAJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACC0E,GAAgBA,EAAanF,OAAS,GACnCxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAQ,iBACZ6H,EAAatE,IAAI,SAAAC,GAAK,OAClBtD,EAAAC,EAAAC,cAACqD,EAAD,CACAC,IAAKF,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMG,YAChB3D,MAAOwD,EAAMI,eACb5B,OAAQwB,EAAMK,aACd5B,KAAMuB,EAAMM,aAAanB,UAAU,EAAG,GACtCR,SAAW,OAKtB2F,GAAaA,EAAUpF,OAAS,GAC9BxC,EAAAC,EAAAC,cAACkD,EAAD,CAAStD,MAAQ,kBACZ8H,EAAUvE,IAAI,SAAA0C,GAAE,OACZ/F,EAAAC,EAAAC,cAACqD,EAAD,CACAC,IAAKuC,EAAGnE,GACRA,GAAImE,EAAGnE,GACPC,SAAUkE,EAAGtC,YACb3D,MAAOiG,EAAGC,cACVlE,OAAQiE,EAAGpC,aACX5B,KAAMgE,EAAGE,oBAMrBjD,GAAShD,EAAAC,EAAAC,cAAC2D,EAAD,CAASjD,MAAM,UAAUE,KAAMkC,IACxC4E,GACGD,GACqB,IAArBC,EAAUpF,QACc,IAAxBmF,EAAanF,QAETxC,EAAAC,EAAAC,cAAC2D,EAAD,CAAS/C,KAAK,gBAAgBF,MAAM,eC9EzCyH,8MCKXnD,MAAQ,CACJyC,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ7E,MAAO,KACPD,SAAS,KAGb+E,aAAe,SAAAQ,GACXA,EAAMC,iBAEa,KADIC,EAAKtD,MAApB2C,YAEJW,EAAKC,kBAIbV,WAAa,SAAAO,GAAQ,IAEJH,EACVG,EADCI,OAASP,MAEbK,EAAKlD,SAAS,CACVuC,WAAYM,OAKpBM,kCAAe,SAAAE,IAAA,IAAAd,EAAAe,EAAAjB,EAAAkB,EAAAjB,EAAA,OAAAkB,EAAA7I,EAAA8I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHrB,EAAeW,EAAKtD,MAApB2C,WACRW,EAAKlD,SAAS,CAACvC,SAAS,IAFbiG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOG7E,GAAUI,OAAOoD,GAPpB,cAAAe,EAAAI,EAAAG,KAMcxB,EANdiB,EAMHzD,KAAQC,QANL4D,EAAAE,KAAA,EAUGrE,GAAMJ,OAAOoD,GAVhB,OAAAgB,EAAAG,EAAAG,KAScvB,EATdiB,EASH1D,KAAQC,QAEZoD,EAAKlD,SAAS,CACVqC,eACAC,cAbGoB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAgBPR,EAAKlD,SAAS,CAAEtC,MAAO,0BAhBhB,eAAAgG,EAAAC,KAAA,GAkBPT,EAAKlD,SAAS,CAAEvC,SAAS,IAlBlBiG,EAAAK,OAAA,6BAAAL,EAAAM,SAAAX,EAAA,gGAsBN,IAAApD,EAC0DF,KAAKH,MAA5DyC,EADHpC,EACGoC,aAAcC,EADjBrC,EACiBqC,UAAWC,EAD5BtC,EAC4BsC,WAAY7E,EADxCuC,EACwCvC,MAAOD,EAD/CwC,EAC+CxC,QACpD,OACG/C,EAAAC,EAAAC,cAACqJ,GAAD,CACC5B,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ7E,MAAOA,EACPD,QAASA,EACT+E,aAAgBzC,KAAKyC,aACrBC,WAAc1C,KAAK0C,oBA3DFrC,wgDCG7B,IAAMvG,GAAYC,UAAOC,IAAVmK,MAOTC,GAAWrK,UAAOC,IAAVqK,KAMc,SAAA/I,GAAK,OAAIA,EAAMgJ,UAUrCC,GAAUxK,UAAOC,IAAVwK,MAQPC,GAAS1K,UAAOC,IAAX0K,KAEiB,SAAApJ,GAAK,OAAIA,EAAMgJ,UAOrCK,GAAO5K,UAAOC,IAAV4K,MAKJ1K,GAAQH,UAAO8K,GAAVC,MAILC,GAAgBhL,UAAOC,IAAVgL,MAIb5D,GAAOrH,UAAOC,IAAViL,MAIJC,GAAUnL,UAAOI,KAAVgL,MAIPC,GAAWrL,UAAOF,EAAVwL,MA4LCC,GAlES,SAAA9K,GAAA,IAAG+K,EAAH/K,EAAG+K,OAAQ7H,EAAXlD,EAAWkD,QAAXlD,EAAoBmD,MAApB,OACtBD,EACE/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACEjD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAACE,EAAD,OAGFJ,EAAAC,EAAAC,cAAC2K,GAAD,KACE7K,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,KACED,EAAAC,EAAAC,cAAA,aACG0K,EAAOlH,eAAiBkH,EAAOlH,eAAiBkH,EAAO5E,cAAe,IADzE,cAKFhG,EAAAC,EAAAC,cAACuJ,GAAD,CACEE,QAAO,sCAAAvH,OAAwCwI,EAAOE,iBAExD9K,EAAAC,EAAAC,cAAC0J,GAAD,KACE5J,EAAAC,EAAAC,cAAC4J,GAAD,CACEH,QACEiB,EAAOnH,YAAP,sCAAArB,OAC0CwI,EAAOnH,aAC7CnB,EAAQ,MAGhBtC,EAAAC,EAAAC,cAAC8J,GAAD,KACEhK,EAAAC,EAAAC,cAAC6K,GAAD,KACGH,EAAOlH,eACJkH,EAAOlH,eACPkH,EAAO5E,eAEbhG,EAAAC,EAAAC,cAACkK,GAAD,KACEpK,EAAAC,EAAAC,cAAC8K,GAAD,KACGJ,EAAOhH,aACJgH,EAAOhH,aAAanB,UAAU,EAAG,GACjCmI,EAAO3E,eAAexD,UAAU,EAAG,IAEzCzC,EAAAC,EAAAC,cAACqK,GAAD,eACAvK,EAAAC,EAAAC,cAAC8K,GAAD,KACGJ,EAAOK,QAAUL,EAAOK,QAAUL,EAAOM,iBAAiB,GAD7D,QAGAlL,EAAAC,EAAAC,cAACqK,GAAD,eACAvK,EAAAC,EAAAC,cAAC8K,GAAD,KACGJ,EAAOO,QACNP,EAAOO,OAAO9H,IAAI,SAAC+H,EAAOC,GAAR,OAChBA,IAAUT,EAAOO,OAAO3I,OAAS,EAC7B4I,EAAME,KADV,GAAAlJ,OAEOgJ,EAAME,KAFb,WAMRtL,EAAAC,EAAAC,cAACuK,GAAD,KAAWG,EAAOW,cCnPbC,eCuHb,SAAAC,EAAY9K,GAAO,IAAA6H,EAAAkD,OAAAC,EAAA,EAAAD,CAAArG,KAAAoG,GACjBjD,EAAAkD,OAAAE,EAAA,EAAAF,CAAArG,KAAAqG,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAzG,KAAM1E,IADW,IAGHsG,EACVtG,EADFuG,SAAYD,SAHG,OAKjBuB,EAAKtD,MAAQ,CACX0F,OAAQ,KACR5H,MAAO,KACPD,SAAS,EACTd,QAASgF,EAAS8E,SAAS,YATZvD,oNAmBbnD,KAAK1E,MAHKiB,IADZoK,MACE9H,OAAUtC,GAEDqK,IAAXC,QAAWD,KAELhK,EAAYoD,KAAKH,MAAjBjD,QACFkK,EAAWC,SAASxK,IACtByK,MAAMF,4CACDF,EAAK,gBAEVrB,EAAS,eAEP3I,oCACwBoC,GAAUE,YAAY4H,oBAAvCvB,IAANzF,8CAEuBN,GAAMG,WAAWmH,2BAAlCvB,IAANzF,UACHmH,kBAAkBzH,GAAMG,WAAWmH,4BAA3BI,8EAGVlH,KAAKC,SAAS,CAAEtC,MAAO,kDAEvBqC,KAAKC,SAAS,CAAEvC,SAAS,EAAO6H,2KAI3B,IAAArF,EAC4BF,KAAKH,MAAhC0F,EADDrF,EACCqF,OAAQ5H,EADTuC,EACSvC,MAAOD,EADhBwC,EACgBxC,QACvB,OAAO/C,EAAAC,EAAAC,cAACsM,GAAD,CAAiB5B,OAAQA,EAAQ5H,MAAOA,EAAOD,QAASA,WA3CtC0C,IAAMC,WC1GpB+G,GAAA,kBACXzM,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACIlC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACIjD,EAAAC,EAAAC,cAACwM,GAAD,MACA1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACI3M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC/M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,MAAME,UAAWE,KAC7BhN,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWG,KAEjCjN,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWI,KACpClN,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWI,KAEnClN,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAUQ,KAAK,IAAIhL,GAAG,sgBCtBtC,IAkBeiL,GAlBMC,4BAAHC,KACZC,MCAeC,oLAEjB,OACExN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgD,SAAA,KACEjD,EAAAC,EAAAC,cAACuM,GAAD,MACAzM,EAAAC,EAAAC,cAACuN,GAAD,cALyB/H,aCAjCgI,IAASC,OAAO3N,EAAAC,EAAAC,cAAC0N,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.80d7c6b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) =>(\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title : PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role = \"img\" aria-label = \"Loading\">\n        ⏰\n        </span>\n    </Container>\n);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color} >{text}</Text> \n    </Container>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","// import React from 'react';\n// import PropTypes from \"prop-types\";\n// import styled from \"styled-components\";\n// import { Link } from \"react-router-dom\";\n\n\n\n// const Container = styled.div`\n//     font-size: 12px;\n// `;\n\n// const ImageContainer = styled.div`\n//     margin-bottom: 5px;\n//     position: relative;\n//     &:hover {\n//         ${Image}{\n//             opacity: 0.3;\n        \n//         }\n//         ${Rating}{\n//             opacity: 1;\n//         }\n//     }\n// `;\n\n// const Image = styled.div`\n//     background-image : url(${props => props.bgUrl});\n//     height: 180px;\n//     backgorund-size: cover;\n//     border-radius:4px;\n//     background-position: center center;\n//     transition: opacity 0.1s linear;\n// `;\n\n// const Rating = styled.span`\n//     bottom: 5px;\n//     right: 5px;\n//     position: absolute;\n//     opacity: 0;\n//     transition: opacity 0.1s linear;\n// `;\n\n// const Title = styled.span`\n//     display: block;\n//     margin-bottom: 3px;\n// `;\n\n// const Year = styled.span`\n//     font-size: 10px;\n//     color: rgba(255, 255, 255, 0.5);\n// `;\n\n// const Poster = ({id, imageUrl, title, rating, year, isMovie}) => (\n//     <Link to={ isMovie ? `/movie/${id}` : `/show/${id}`}>\n//         <Container>\n//             <ImageContainer>\n//                 <Image bgUrl={ imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}`:\n//                     require(\"../Components/assets/noPosterSmall.png\") }\n//                 />\n//                 <Rating>\n//                     <span role=\"img\" aria-label = \"rating\">\n//                     ⭐️\n//                     </span>{\" \"}\n//                     {rating}/10\n//                 </Rating>\n//             </ImageContainer>\n//             <Title>{title.length > 18 ? `${title.substring(0, 18)}...`: title}\n//             </Title>\n//             <Year>{year}</Year>\n//         </Container>\n//     </Link>\n// );\n\n\n// Poster.propTypes = {\n//     id: PropTypes.number.isRequired,\n//     imageUrl: PropTypes.string,\n//     title:  PropTypes.string.isRequired,\n//     rating:  PropTypes.number,\n//     year :  PropTypes.string,\n//     isMovie :  PropTypes.bool\n// };\n// export default Poster;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../Components/assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}…` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;","// import React from 'react';\n// import PropTypes from 'prop-types';\n// import styled from 'styled-components';\n// import Section from '../../Components/Section';\n// import Loader from \"../../Components/Loader\";\n// import Message from \"../../Components/Message\";\n// import Poster from \"../../Components/Poster\";\n\n// const Container = styled.div`\n//     padding: 0px 10px;\n// `;\n\n// const HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \n//     loading ? <Loader/> : (\n//         <Container>\n//             {nowPlaying && nowPlaying.length > 0 && (\n//                 <Section title = \"Now Playing\">\n//                     {nowPlaying.map(movie => (\n//                         <Poster \n//                             key={movie.id}\n//                             id={movie.id}\n//                             imageUrl={movie.poster_path}\n//                             title={movie.original_title}\n//                             rating={movie.vote_average}\n//                             year={movie.release_date.substring(0,4)}\n//                             isMovie = {true}\n//                         />\n\n//                     ))}\n//                 </Section>\n//             )}\n//             {upcoming && upcoming.length > 0 && (\n//                 <Section title = \"Upcomming\">\n//                     {upcoming.map(movie => (    \n//                         <Poster \n//                         key={movie.id}\n//                         id={movie.id}\n//                         imageUrl={movie.poster_path}\n//                         title={movie.original_title}\n//                         rating={movie.vote_average}\n//                         year={movie.release_date.substring(0,4)}\n//                         isMovie = {true}\n//                     />\n//                     ))}\n//                 </Section>\n//             )}\n//             {popular && popular.length > 0 && (\n//                 <Section title = \"popular\">\n//                  {popular.map(movie => (    \n//                    <Poster \n//                             key={movie.id}\n//                             id={movie.id}\n//                             imageUrl={movie.poster_path}\n//                             title={movie.original_title}\n//                             rating={movie.vote_average}\n//                             year={movie.release_date.substring(0,4)}\n//                             isMovie = {true}\n//                         />\n//                     ))}\n//                 </Section>\n//             )}\n//             {error && <Message color=\"#e74c3c\" text={error}/>}\n//         </Container>\n//     );\n\n// HomePresenter.propTypes = {\n//     nowPlaying: PropTypes.array,\n//     popular : PropTypes.array,\n//     upcoming : PropTypes.array,\n//     loading : PropTypes.bool.isRequired,\n//     error : PropTypes.string\n// };\n\n// export default HomePresenter;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n// const HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n//   <>\n//       <Helmet>\n//           <title>Movies | Nomflex</title>\n//       </Helmet>\n//         {\n//           loading ? (\n//             <Loader />\n//           ) : (\n//             <Container>\n//               <Helmet>\n//                 <title>Movies | Nomflex</title>\n//               </Helmet>\n//               {nowPlaying && nowPlaying.length > 0 && (\n//                 <Section title=\"Now Playing\">\n//                   {nowPlaying.map(movie => (\n//                     <Poster\n//                       key={movie.id}\n//                       id={movie.id}\n//                       imageUrl={movie.poster_path}\n//                       title={movie.original_title}\n//                       rating={movie.vote_average}\n//                       year={movie.release_date.substring(0, 4)}\n//                       isMovie={true}\n//                     />\n//                   ))}\n//                 </Section>\n//               )}\n//               {upcoming && upcoming.length > 0 && (\n//                 <Section title=\"Upcoming Movies\">\n//                   {upcoming.map(movie => (\n//                     <Poster\n//                       key={movie.id}\n//                       id={movie.id}\n//                       imageUrl={movie.poster_path}\n//                       title={movie.original_title}\n//                       rating={movie.vote_average}\n//                       year={movie.release_date.substring(0, 4)}\n//                       isMovie={true}\n//                     />\n//                   ))}\n//                 </Section>\n//               )}\n//               {popular && popular.length > 0 && (\n//                 <Section title=\"Popular Movies\">\n//                   {popular.map(movie => (\n//                     <Poster\n//                       key={movie.id}\n//                       id={movie.id}\n//                       imageUrl={movie.poster_path}\n//                       title={movie.original_title}\n//                       rating={movie.vote_average}\n//                       year={movie.release_date.substring(0, 4)}\n//                       isMovie={true}\n//                     />\n//                   ))}\n//                 </Section>\n//               )}\n//               {error && <Message color=\"#e74c3c\" text={error} />}\n//           </Container>\n//         )\n//       }\n//   </>\n//   );\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;","// import axios from \"axios\";\n\n// const api = axios.create({\n//     baseURL : \"https://api.themoviedb.org/3/\",\n//     params: {\n//         api_key: \"d5fe62590abe1519e78a027cf17166ac\",\n//         language: \"en-US\"\n//     }\n// });\n\n// // export const moviesApi = {\n// //     nowPlaying: () => api.get(\"movie/now_playing\"),\n// //     upcoming: () => api.get(\"movie/upcoming\"),\n// //     popular: () => api.get(\"movie/popular\"),\n// //     movieDetail: id =>\n// //         api.get(`movie/${id}`, {\n// //             params: {\n// //                 append_to_response: \"videos\"\n// //             }\n// //         }),\n// //     search: term => \n// //         api.get(`search/movie`,{\n// //             params: {\n// //                 query: encodeURIComponent(term)\n// //             }\n// //         })\n// // }\n\n// export const moviesApi = {\n//     nowPlaying: () => api.get(\"movie/now_playing\"),\n//     upcoming: () => api.get(\"movie/upcoming\"),\n//     popular: () => api.get(\"movie/popular\"),\n//     movieDetail: id =>\n//       api.get(`movie/${id}`, {\n//         params: {\n//           append_to_response: \"videos\"\n//         }\n//       }),\n//     search: term =>\n//       api.get(\"search/movie\", {\n//         params: {\n//           query: encodeURIComponent(term)\n//         }\n//       })\n//   };\n\n// // export const tvApi = {\n// //     topRated: () => api.get(\"tv/top_rated\"),\n// //     popular: () => api.get(\"tv/popular\"),\n// //     airing_today: () => api.get(\"tv/airing_today\"),\n// //     showDetail: id =>\n// //         api.get(`tv/${id}`,{\n// //             params: {\n// //                 append_to_response: \"videos\"\n// //             }\n// //         }),\n// //     search: term => \n// //         api.get(`search/tv`,{\n// //             params: {\n// //                 query: encodeURIComponent(term)\n// //             }\n// //         })\n// // }\n\n// export const tvApi = {\n//     topRated: () => api.get(\"tv/top_rated\"),\n//     popular: () => api.get(\"tv/popular\"),\n//     airingToday: () => api.get(\"tv/airing_today\"),\n//     showDetail: id =>\n//       api.get(`tv/${id}`, {\n//         params: {\n//           append_to_response: \"videos\"\n//         }\n//       }),\n//     search: term =>\n//       api.get(\"search/tv\", {\n//         params: {\n//           query: encodeURIComponent(term)\n//         }\n//       })\n//   };\n\n// export default api;\n\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"ae61da0a1b03db56e103056851b7e551\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id =>\n        api.get(`movie/${id}?api_key=ae61da0a1b03db56e103056851b7e551`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}?api_key=ae61da0a1b03db56e103056851b7e551`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}\n\nexport default api;","import HomeContainer from './HomeContainer';\nexport default HomeContainer;","// import React, { Component } from 'react';\n// import HomePresenter from './HomePresenter';\n// import { moviesApi } from '../../api';\n\n// class HomeContainer extends Component {\n//     state = {\n//         nowPlaying: null,\n//         upcoming: null,\n//         popular: null,\n//         error: null,\n//         loading: null,\n//     }\n\n//     async componentDidMount() {\n//         try {\n//             const {\n//                 data: { results: nowPlaying }\n//             } = await moviesApi.nowPlaying();\n\n//             const {\n//                 data: { results: upcoming }\n//             } = await moviesApi.upcoming();\n            \n//             const {\n//                 data: { results: popular }\n//             } = await moviesApi.popular();\n//             this.setState({\n//                 nowPlaying,\n//                 upcoming,\n//                 popular\n//             })\n//         }catch{\n//             this.setState({\n//                 error: \"Can't find movies information.\"\n//             })\n//         }finally{\n//             this.setState({\n//                 loading: false\n//             })\n//         }\n//     }\n\n//     render() {\n//         const { nowPlaying, upcoming, popular, error, loading} = this. state;\n//         return (\n//            <HomePresenter\n//             nowPlaying={nowPlaying}\n//             upcoming={upcoming}\n//             popular={popular}\n//             error={error}\n//             loading={loading}\n//            />\n//         );\n//     }\n// }\n\n\n// export default HomeContainer;\n\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n// import { moviesApi } from .../../\";\nimport {moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\n\nconst Container = styled.div`\n    padding: 0px 10px;\n`;\n\n\nconst TVPresenter = ({topRated, popular, airing_today, loading, error}) => (\n    <>\n        <Helmet>\n          <title>tv | Nomflex</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n        <Container>\n            <Helmet>\n                <title>tv | Nomflix</title>\n            </Helmet>\n             {topRated && topRated.length > 0 && (\n            <Section title = \"topRated\">\n                {topRated.map(tv => (\n                     <Poster \n                     key={tv.id}\n                     id={tv.id}\n                     imageUrl={tv.poster_path}\n                     title={tv.original_name}\n                     rating={tv.vote_average}\n                     year={tv.first_air_date.substring(0,4)}\n                     \n                 />\n                ))}\n            </Section>\n            )}\n            {popular && popular.length > 0 && (\n            <Section title = \"popular\">\n                {popular.map(tv => (\n                     <Poster \n                     key={tv.id}\n                     id={tv.id}\n                     imageUrl={tv.poster_path}\n                     title={tv.original_name}\n                     rating={tv.vote_average}\n                     year={tv.first_air_date.substring(0,4)}\n                     \n                 />\n                ))}\n            </Section>\n            )}\n             {airing_today && airing_today.length > 0 && (\n            <Section title = \"airing_today\">\n                {airing_today.map(tv => (\n                     <Poster \n                     key={tv.id}\n                     id={tv.id}\n                     imageUrl={tv.poster_path}\n                     title={tv.original_name}\n                     rating={tv.vote_average}\n                     year={tv.first_air_date.substring(0,4)}\n                     \n                 />\n                ))}\n            </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}></Message>}\n            \n        </Container>\n    \n    )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular : PropTypes.array,\n    airing_today : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string\n};\n\nexport default TVPresenter;\n\n// loading ? <Loader/> : (\n//     <Container>\n//         {nowPlaying && nowPlaying.length > 0 && (\n//             <Section title = \"Now Playing\">\n//                 {nowPlaying.map(movie => (\n//                     <span key={movie.id}>{movie.title}></span>\n//                 ))}\n//             </Section>\n//         )}\n//         {upcoming && upcoming.length > 0 && (\n//             <Section title = \"Upcomming\">\n//                 {upcoming.map(movie => (    \n//                     <span key={movie.id}>{movie.title}</span>\n//                 ))}\n//             </Section>\n//         )}\n//         {popular && popular.length > 0 && (\n//             <Section title = \"popular\">\n//                 {popular.map(movie => movie.title)}\n//             </Section>\n//         )}\n//     </Container>\n// );","import TVContainer from './TVContainer';\nexport default TVContainer;","import React, { Component } from 'react';\nimport TVPresenter from './TVPresenter';\nimport {tvApi} from '../../api';\n\n//class TVContainer extends Component {\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            \n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        }catch{\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n        }finally{\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, error, loading} = this.state;\n        return (\n           <TVPresenter\n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            error={error}\n            loading={loading}\n           />\n        );\n    }\n}\n\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20,20,20,0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.3s ease-in-out;\n`;\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justfy-content: center;\n`;\n\n\nexport default withRouter(({ location: {pathname}}) => (\n    <header>\n       <List>\n           <Item current={pathname===\"/\"}>\n               <SLink to=\"/\">Movies</SLink>\n           </Item>\n           <Item current={pathname===\"/tv\"}>\n               <SLink to=\"/tv\">TV</SLink>\n           </Item>\n           <Item current={pathname===\"/search\"}>\n               <SLink to=\"/search\">Search</SLink>\n           </Item>\n       </List>\n    </header>\n));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from '../../Components/Section';\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    error,\n    searchTerm,\n    handleSubmit,\n    loading,\n    updateTerm\n\n}) => (\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input\n             placeholder=\"Search Movies or TV Shows..\"\n             value ={searchTerm}\n             onChange={updateTerm}\n             />\n            \n        </Form>\n         {loading ? (\n            <Loader />\n        ): (\n            <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title = \"movie results\">\n                    {movieResults.map(movie =>(\n                         <Poster \n                         key={movie.id}\n                         id={movie.id}\n                         imageUrl={movie.poster_path}\n                         title={movie.original_title}\n                         rating={movie.vote_average}\n                         year={movie.release_date.substring(0, 4)}\n                         isMovie = {true}\n                     />\n                    ))}\n                </Section>\n            )}\n             {tvResults && tvResults.length > 0 && (\n                <Section title = \"tv show Result\">\n                    {tvResults.map(tv =>(\n                         <Poster \n                         key={tv.id}\n                         id={tv.id}\n                         imageUrl={tv.poster_path}\n                         title={tv.original_name}\n                         rating={tv.vote_average}\n                         year={tv.first_air_date}\n                         \n                     />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}></Message>}\n            {tvResults && \n                movieResults &&\n                tvResults.length === 0 &&\n                movieResults.length === 0 &&\n                (\n                    <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                )\n                }\n            </>\n        )} \n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults : PropTypes.array,\n    error : PropTypes.array,\n    searchTerm : PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit : PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\nexport default SearchContainer;","import React, { Component } from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\n//class SearchContainer extends Component {\nexport default class extends Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        error: null,\n        loading: false\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if( searchTerm !== \"\"){\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = event =>{\n        const {\n            target: {value}\n        }= event;\n        this.setState({\n            searchTerm: value\n        })\n    }\n\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({loading: true});\n\n        try{\n            const {\n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            });       \n        }catch{\n            this.setState({ error: \"Can't find result... \"});\n        }finally{\n            this.setState({ loading: false });\n        }\n    }\n   \n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading} = this.state;\n        return (\n           <SearchPresenter\n            movieResults={movieResults}\n            tvResults={tvResults}\n            searchTerm={searchTerm}\n            error={error}\n            loading={loading}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n           />\n        );\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport Helmet from \"react-helmet\";\n\n\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n\n`;\n\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover =  styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.div`\n\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\n// const DetailPresenter = ({\n//     result,\n//     loading,\n//     error\n    \n// }) => loading? ( <>\n//                     <Helmet>\n//                         <title>loading | Nomflex</title>\n//                     </Helmet>\n//                     <Loader/>\n//                 </> ): (\n//     <Container>\n//         <Helmet>\n//             <title>\n//                 {result.original_title ? result.original_title : result.original_name}{\" \"}\n//                  | Nomflex\n//             </title>\n//         </Helmet>\n\n//         <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n//         <Content>\n//         <Cover\n//           bgImage={\n//             result.poster_path\n//               ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n//               : require(\"../../Components/assets/noPosterSmall.png\")\n//           }\n//         />\n//         <Data>\n//             <Title>\n//                 {result.original_title ? result.original_title : result.original_name}\n//             </Title>\n//             <ItemContainer>\n//                 <Item>\n//                     {result.release_date ? result.release_date.substring(0,4) : result.release_date.substring(0,4)}\n//                 </Item>\n//                 <Divider>•</Divider>\n//                 <Item>\n//                     {result.runtime? result.runtime: result.episode_run_time[0]} min\n//                 </Item>\n//                 <Divider>•</Divider>\n//                 <Item>\n//                     {result.genres&& result.genres.map((genre, index) => index === result.genres.length - 1 \n//                         ? genre.name \n//                         : `${genre.name} / `\n//                     )} \n//                 </Item>\n\n//             </ItemContainer>\n//             <Overview>{result.overview}</Overview>\n//         </Data>\n//         </Content>\n//     </Container>\n\n// );\n\n// const DetailPresenter = ({ result, loading, error }) =>\n//   loading ? (\n//     <>\n//       <Helmet>\n//         <title>Loading | Nomflix</title>\n//       </Helmet>\n//       <Loader />\n//     </>\n//   ) : (\n//     //<Container>\n//       {/* { <Helmet>\n//         <title>\n//           {result.original_title ? result.original_title : result.original_name}{\" \"}\n//           | Nomflix\n//         </title>\n//       </Helmet> */}\n//     //   <Backdrop\n//     //     bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n//     //   />\n//     //   <Content>\n//     //     <Cover\n//     //       bgImage={\n//     //         result.poster_path\n//     //           ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n//     //           : require(\"../../Components/assets/noPosterSmall.png\")\n//     //       }\n//     //     />\n//     //     <Data>\n//     //       <Title>\n//     //         {result.original_title\n//     //           ? result.original_title\n//     //           : result.original_name}\n//     //       </Title>\n//     //       <ItemContainer>\n//     //         <Item>\n//     //           {result.release_date\n//     //             ? result.release_date\n//     //             : result.first_air_date}\n//     //         </Item>\n//     //         <Divider>•</Divider>\n//     //         <Item>\n//     //           {result.runtime ? result.runtime : result.episode_run_time[0]} min\n//     //         </Item>\n//     //         <Divider>•</Divider>\n//     //         <Item>\n//     //           {result.genres &&\n//     //             result.genres.map((genre, index) =>\n//     //               index === result.genres.length - 1\n//     //                 ? genre.name\n//     //                 : `${genre.name} / `\n//     //             )}\n//     //         </Item>\n//     //       </ItemContainer>\n//     //       <Overview>{result.overview}</Overview>\n//     //     </Data>\n//     //   </Content> }\n//     //</Container>\n//   );\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../Components/assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\n\nDetailPresenter.propTypes = {\n    result: PropTypes.array,\n    error : PropTypes.array,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\nexport default DetailContainer;","// import React, { Component } from 'react';\n// import DetailPresenter from './DetailPresenter';\n// import { moviesApi, tvApi } from '../../api';\n\n// class DetailContainer extends Component {\n//     constructor(props){\n//         super(props);\n//         const {\n//             location: {pathname}\n//         } = props;\n\n//         this.state = {\n//             result: null,\n//             error: null,\n//             loading: true,\n//             isMovie: pathname.includes(\"/movie/\")\n//         }\n//     }\n//     async componentDidMount() {\n//         const {\n//             match: {\n//                 params: {id}\n//             },\n//             history: {push}\n//         } = this.props;\n\n//         const { isMovie } = this.state;\n//         const parseId = parseInt(id);\n\n//         if(isNaN(parseId)){\n//             return push(\"/\");\n//         }\n\n//         let result = null;\n\n//         try {\n//             if (isMovie) {\n//                 //const request = await moviesApi.movieDetail(parseId);\n//                 //result = request.data;\n//                 ({ data: result } = await moviesApi.movieDetail(parseId));\n//             }else{\n//                 //const request = await tvApi.showDetail(parseId);\n//                 //result = request.data;\n//                 ({ data: result } = await tvApi.showDetail(parseId));\n//             }\n//         }catch{\n//             this.setState({ error: \"Can't find anything...\" })\n//         }finally{\n//             this.setState({loading: false, result });\n//         }\n//     }\n//     render() {\n//         const { result, error, loading} = this. state;\n//         return (\n//            <DetailPresenter\n//             result={result}\n//             error={error}\n//             loading={loading}\n//            />\n//         );\n//     }\n// }\n\n// export default DetailContainer;\n\n// import React from \"react\";\n// import DetailPresenter from \"./DetailPresenter\";\n// import { moviesApi, tvApi } from \"../../api\";\n\n// export default class extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     const {\n//       location: { pathname }\n//     } = props;\n//     this.state = {\n//       result: null,\n//       error: null,\n//       loading: true,\n//       isMovie: pathname.includes(\"/movie/\")\n//     };\n//   }\n\n//   async componentDidMount() {\n//     const {\n//       match: {\n//         params: { id }\n//       },\n//       history: { push }\n//     } = this.props;\n//     const { isMovie } = this.state;\n//     const parsedId = parseInt(id);\n//     if (isNaN(parsedId)) {\n//       return push(\"/\");\n//     }\n//     let result = null;\n//     try {\n//       if (isMovie) {\n//         ({ data: result } = await moviesApi.movieDetail(parsedId));\n//       } else {\n//         ({ data: result } = await tvApi.showDetail(parsedId));\n//       }\n//     } catch {\n//       this.setState({ error: \"Can't find anything.\" });\n//     } finally {\n//       this.setState({ loading: false, result });\n//     }\n//   }\n\n//   render() {\n//     const { result, error, loading } = this.state;\n//     return <DetailPresenter result={result} error={error} loading={loading} />;\n//   }\n// }\n\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n        console.log(await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\nimport Home from '../Routes/Home';\nimport TV from '../Routes/TV';\nimport Header from './Header';\nimport Search from '../Routes/Search';\nimport Detail from '../Routes/Detail';\n\nexport default () =>(\n    <Router>\n        <>\n            <Header/>\n            <Switch>\n                <Route path=\"/\" exact component={Home}/>\n                <Route path=\"/tv\" component={TV}/>\n                <Route path=\"/search\" component={Search}/>\n\n                <Route path=\"/movie/:id\" component={Detail}/>\n                <Route path=\"/show/:id\" component={Detail}/>\n\n                <Redirect from=\"*\" to=\"/\"/>\n            </Switch>\n        </>\n    </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"./Router\";\nimport GlobalStyles from './GlobalStyles';\n\nexport default class App extends Component{\n  render(){\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}